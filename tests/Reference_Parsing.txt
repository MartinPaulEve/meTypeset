*** Settings ***
Documentation     This series of test cases evaluates meTypeset's ability to handle various aspects of scholarly referencing
Library           Process
Library           OperatingSystem
Library           XML
Library           Collections

*** Test Cases ***
R01 Simple Inline Reference
    [Tags]    references    inline    R01
    ${result} =    Run Process    python ../bin/meTypeset.py docx SimpleInline.docx ./Inline -d --nogit    shell=True
    Log    ${result.stdout}
    Log    ${result.stderr}
    ${xml}=    Parse XML    ./Inline/nlm/out.xml
    ${paragraph}=    Get Element    ${xml}    body/sec/p/xref
    Should Be Equal As Strings    ${paragraph.text}    Eve 2012
    [Teardown]    Remove Directory    Inline    recursive=True

R02 Year detection method
    [Tags]    references    ref-list    R02
    ${result} =    Run Process    python ../bin/meTypeset.py docx R02.docx -s testsettings.xml ./R02 -d --nogit    shell=True
    Log    ${result.stdout}
    Log    ${result.stderr}
    ${xml}=    Parse XML    ./R02/nlm/out.xml
    ${paragraph}=    Get Element    ${xml}    back/ref-list
    Elements Should Match    ${paragraph}    <ref-list><ref><mixed-citation>Eve, Martin Paul, <italic>Pynchon and Philosophy</italic> (London: Palgrave MacMillan, 2014)</mixed-citation></ref><ref><mixed-citation>Thomas, Samuel, <italic>Pynchon and the Political </italic>(New York: Routledge, 2007)</mixed-citation></ref></ref-list>    normalize_whitespace=yes
    [Teardown]    Remove Directory    R02    recursive=True

R03 Link parsing with external link (tests re-assembly order)
    [Tags]    formatting    referencelinker    R03
    ${mkdir} =    Run Process    mkdir ./R03    shell=True
    ${cp} =    Run Process    cp LinkSubElements.xml ./R03/    shell=True
    ${result} =    Run Process    python ../bin/referencelinker.py scan ./R03/LinkSubElements.xml -d --nogit    shell=True
    Log    ${result.stdout}
    Log    ${result.stderr}
    ${xml}=    Parse XML    ./R03/LinkSubElements.xml
    ${secs}=    Get Element    ${xml}    body/sec/p
    ${xref}=    Get Element    ${secs}    xref
    ${link}=    Get Element    ${secs}    ext-link
    Should Be Equal As Strings    ${secs.text}    Some text (
    Should Be Equal As Strings    ${xref.text}    to link
    Should Be Equal As Strings    ${xref.tail}    ) and\ \
    Should Be Equal As Strings    ${link.text}    a link
    Should Be Equal As Strings    ${link.tail}    \ text.
    [Teardown]    Remove Directory    R03    recursive=True

R04 Multiblock Reference Parser
    [Tags]    references    ref-list    R04    multiblock
    ${result} =    Run Process    python ../bin/meTypeset.py docx HeadingInReferences.docx -s testsettings.xml ./R04 -d --nogit    shell=True
    Log    ${result.stdout}
    Log    ${result.stderr}
    ${xml}=    Parse XML    ./R04/nlm/out.xml
    ${paragraph}=    Get Element    ${xml}    back/ref-list
    Elements Should Match    ${paragraph}    <ref-list><ref><mixed-citation>An Author, <italic>A Reference</italic> (London: Publisher, 2014)</mixed-citation></ref><ref><mixed-citation>Another Author, <italic>A Reference</italic> (London: Publisher, 2014)</mixed-citation></ref><ref><mixed-citation>A Third Author, A Reference (London: Publisher, 2014)</mixed-citation></ref><ref><mixed-citation>A Fourth Author, <italic>A Reference</italic> (London: Publisher, 2014)</mixed-citation></ref></ref-list>    normalize_whitespace=yes
    [Teardown]    Remove Directory    R04    recursive=True

R05 Multiblock Reference Parser With Split Line
    [Tags]    references    ref-list    R05    multiblock
    ${result} =    Run Process    python ../bin/meTypeset.py docx HeadingInReferencesSplitLine.docx -s testsettings.xml ./R05 -d --nogit    shell=True
    Log    ${result.stdout}
    Log    ${result.stderr}
    ${xml}=    Parse XML    ./R05/nlm/out.xml
    ${paragraph}=    Get Element    ${xml}    back/ref-list
    Elements Should Match    ${paragraph}    <ref-list> <ref> <mixed-citation>An Author, <italic>A Reference</italic> (London: Publisher, 2014)</mixed-citation> </ref> <ref> <mixed-citation>Another Author, <italic>A Reference</italic> (London: Publisher, 2014)http://www.martineve.com</mixed-citation> </ref> <ref> <mixed-citation>A Third Author, A Reference (London: Publisher, 2014)</mixed-citation> </ref> <ref> <mixed-citation>A Fourth Author, <italic>A Reference</italic> (London: Publisher, 2014)</mixed-citation> </ref> </ref-list>    normalize_whitespace=yes
    [Teardown]    Remove Directory    R05    recursive=True

R06 Multiblock Reference Parser at arbitrary depth
    [Tags]    references    ref-list    R06    multiblock
    ${result} =    Run Process    python ../bin/meTypeset.py docx HeadingInReferencesArbitraryDepth.docx -s testsettings.xml ./R06 -d --nogit    shell=True
    Log    ${result.stdout}
    Log    ${result.stderr}
    ${xml}=    Parse XML    ./R06/nlm/out.xml
    ${paragraph}=    Get Element    ${xml}    back/ref-list
    Elements Should Match    ${paragraph}    <ref-list> <ref> <mixed-citation>An Author, <italic>A Reference</italic> (London: Publisher, 2014)</mixed-citation> </ref> <ref> <mixed-citation>Another Author, <italic>A Reference</italic> (London: Publisher, 2014)</mixed-citation> </ref> <ref> <mixed-citation>A Third Author, A Reference (London: Publisher, 2014)</mixed-citation> </ref> <ref> <mixed-citation>A Fourth Author, <italic>A Reference</italic> (London: Publisher, 2014)</mixed-citation> </ref> <ref> <mixed-citation>A Fifth Author, A Reference (London: Publisher, 2014)</mixed-citation> </ref> <ref> <mixed-citation>A Sixth Author, <italic>A Reference</italic> (London: Publisher, 2014)</mixed-citation> </ref> </ref-list>    normalize_whitespace=yes
    [Teardown]    Remove Directory    R06    recursive=True

R07 Reference block with trailing acknowledgements
    [Tags]    references    ref-list    R07
    ${result} =    Run Process    python ../bin/meTypeset.py docx ReferenceWithTrailingAcknowledgement.docx -s testsettings.xml ./R07 -d --nogit    shell=True
    Log    ${result.stdout}
    Log    ${result.stderr}
    ${xml}=    Parse XML    ./R07/nlm/out.xml
    ${paragraph}=    Get Element    ${xml}    back/ref-list
    ${body}=    Get Element    ${xml}    body
    Elements Should Match    ${body}    <body> <sec> <title>A Document</title> <p>Some text</p> </sec> <sec> <title/> <p>The author would like to thank Helen Eve for her eternal patience with the development of this typesetter.</p> </sec> </body>    normalize_whitespace=yes
    Elements Should Match    ${paragraph}    <ref-list> <ref> <mixed-citation>An author reference 2014</mixed-citation> </ref> <ref> <mixed-citation>Another reference 2014</mixed-citation> </ref> <ref> <mixed-citation>A final reference 2014</mixed-citation> </ref> </ref-list>    normalize_whitespace=yes
    [Teardown]    Remove Directory    R07    recursive=True

R08 Multiblock reference handling with sequential non-reference items (graceful fail)
    [Tags]    references    ref-list    R08
    ${result} =    Run Process    python ../bin/meTypeset.py docx HeadingInReferencesSplitLineBreakFail.docx -s testsettings.xml ./R08 -d --nogit    shell=True    timeout=20s
    Log    ${result.stdout}
    Log    ${result.stderr}
    ${xml}=    Parse XML    ./R08/nlm/out.xml
    ${paragraph}=    Get Element    ${xml}    back/ref-list
    ${body}=    Get Element    ${xml}    body
    Elements Should Match    ${body}    <body> <sec> <title>A Document</title> <p>Some Text</p> </sec> <sec reflist="yes"> <title/> <p>Final extra information</p> <p rend="ref">Another reference that should not be parsed 2014</p> <p rend="ref">Another second reference that should not be parsed 2014</p> <p rend="ref">A final reference that should not be parsed 2014</p> </sec> </body>    normalize_whitespace=yes
    Elements Should Match    ${paragraph}    <ref-list> <ref> <mixed-citation>An Author, <italic>A Reference</italic> (London: Publisher, 2014)</mixed-citation> </ref> <ref> <mixed-citation>Another Author, <italic>A Reference</italic> (London: Publisher, 2014)http://www.martineve.com</mixed-citation> </ref> <ref> <mixed-citation>A Third Author, A Reference (London: Publisher, 2014)</mixed-citation> </ref> <ref> <mixed-citation>A Fourth Author, <italic>A Reference</italic> (London: Publisher, 2014)some extra informationhttp://www.ohdear.com </mixed-citation> </ref> </ref-list>    normalize_whitespace=yes
    [Teardown]    Remove Directory    R08    recursive=True

R09 Regex crash
    [Tags]    references    ref-list    R09
    ${result} =    Run Process    python ../bin/meTypeset.py docx R09.docx ./R09 -d --nogit    shell=True    timeout=10s
    Log    ${result.stdout}
    Log    ${result.stderr}
    Should Not Contain    ${result.stderr}    cannot find or open
    Should Not Contain    ${result.stdout}    ERROR
    ${xml}=    Parse XML    ./R09/nlm/out.xml
    Should Be Equal As Integers    ${result.rc}    0
    [Teardown]    Remove Directory    R09    recursive=True
